#!/bin/bash

help () {
cat << EOF
Command line interface for the Docker-based web development environment Swiss Army Knife (SAK).
Usage:
    sak <command> [options] [arguments]
Available commands:
    init ...................................... Initialise the Docker environment and the application
    build [image] ............................. Build all of the images or the specified one
    destroy ................................... Remove the entire Docker environment
    down [-v] ................................. Stop and destroy all containers
                                                Options:
                                                    -v .................... Destroy the volumes as well
    logs [container] .......................... Display and tail the logs of all containers or the specified one's
    restart ................................... Restart the containers
    start ..................................... Start the containers
    stop ...................................... Stop the containers
    update .................................... Update the Docker environment

    yarn ...................................... Run a yarn command in the container
    ipfs ...................................... Run an ipfs command on the IPFS container (SEE https://docs.ipfs.tech/reference/kubo/cli/)

    deploy .................................... Deploy the contract
EOF
        exit
}
#######################################
# FUNCTIONS
#######################################

# Build all of the images or the specified one
build () {
    docker compose build "${@:1}"
}

# Remove the entire Docker environment
destroy () {
    read -p "This will delete containers, volumes and images. Are you sure? [y/N]: " -r
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then exit; fi
    docker compose down -v --rmi all --remove-orphans
}

# Stop and destroy all containers
down () {
    docker compose down "${@:1}"
}


# Initialise the Docker environment and the application
init () {
    down -v \
        && build \
        && yarn install \
        && start
}

# Display and tail the logs of all containers or the specified one's
logs () {
    docker compose logs -f "${@:1}"
}

# Restart the containers
restart () {
    stop && start
}

# Start the containers
start () {
    docker compose up -d
}

# Stop the containers
stop () {
    docker compose stop
}

# Update the Docker environment
update () {
    git pull \
        && build \
        && yarn install \
        && start
}

# Run a command
yarn () {
    docker compose run --rm yarn yarn "${@:1}"
}

# Run a ipfs command
ipfs () {
    docker compose run --rm ipfs ipfs "${@:1}"
}

# deploy the contract
deploy () {
   yarn run deploy-and-graph
}


#######################################
# MENU
#######################################

case "$1" in
    build)
        build "${@:2}"
        ;;
    destroy)
        destroy
        ;;
    down)
        down "${@:2}"
        ;;
    init)
        init
        ;;
    logs)
        logs "${@:2}"
        ;;
    restart)
        restart
        ;;
    start)
        start
        ;;
    stop)
        stop
        ;;
    update)
        update
        ;;
    ipfs)
        ipfs "${@:2}"
        ;;
    yarn)
        yarn "${@:2}"
        ;;
    deploy)
        deploy
        ;;
    *)
        help
        ;;
esac